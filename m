Return-Path: <linux-kbuild-owner@vger.kernel.org>
X-Original-To: lists+linux-kbuild@lfdr.de
Delivered-To: lists+linux-kbuild@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 86FC95FBD0D
	for <lists+linux-kbuild@lfdr.de>; Tue, 11 Oct 2022 23:36:36 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229446AbiJKVge (ORCPT <rfc822;lists+linux-kbuild@lfdr.de>);
        Tue, 11 Oct 2022 17:36:34 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:41450 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229436AbiJKVgd (ORCPT
        <rfc822;linux-kbuild@vger.kernel.org>);
        Tue, 11 Oct 2022 17:36:33 -0400
Received: from conssluserg-06.nifty.com (conssluserg-06.nifty.com [210.131.2.91])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id CB7167A775
        for <linux-kbuild@vger.kernel.org>; Tue, 11 Oct 2022 14:36:27 -0700 (PDT)
Received: from mail-oa1-f43.google.com (mail-oa1-f43.google.com [209.85.160.43]) (authenticated)
        by conssluserg-06.nifty.com with ESMTP id 29BLa3NB015996
        for <linux-kbuild@vger.kernel.org>; Wed, 12 Oct 2022 06:36:03 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conssluserg-06.nifty.com 29BLa3NB015996
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
        s=dec2015msa; t=1665524164;
        bh=1xiHuOIhCXv9cmT4wyT8wFlNoveMxozMd1fUtU9/tZI=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=m99Q56LQNOooDDWWTy9Vxr4H0OR4AC7VhY8mK7Gz3ktpVsT9VSJpx2peQknec8Jdt
         9yvOmYk2fC/U9HkxzG1yKgEcJjsCKN4xteRKvegI+Ef4jaL5bgFpu4TyHtLgs1mrGg
         YcY2m9d5HxDynhz/YMNWuROHDaZCBYlnJelYJSqq7NfBJ2M6CxxsNXttF3m29xn294
         rSyzZ6TRACfdFK95vWiV9eS5x3kACMallV1jqMXWzcSquqsvvUa60fNTrcLxs7iR8b
         D0kmNdUsX6JWepNRumSpmFzbnwGrgvIt07WNjf7KpYEyIVQ7IXBHdJXnBxhr3tCdsJ
         m2SWlafcwXbRA==
X-Nifty-SrcIP: [209.85.160.43]
Received: by mail-oa1-f43.google.com with SMTP id 586e51a60fabf-134072c15c1so14261373fac.2
        for <linux-kbuild@vger.kernel.org>; Tue, 11 Oct 2022 14:36:03 -0700 (PDT)
X-Gm-Message-State: ACrzQf1LiyKmxEQYO3nAy7DYIGmye+gCU2+IPSfepy1zgAIG33lBGZnZ
        fOyyum+gkMwffHN2bnlKyFXS304tvdvg7pSeqi0=
X-Google-Smtp-Source: AMsMyM6v64vpV95ouNcRXIrUzy2RvsBh4w4NffHVMs8HI/+CZhislBCDqe3eFdHm9YPoU72smBmSnsD55wr2DT+jpQ4=
X-Received: by 2002:a05:6870:c58b:b0:10b:d21d:ad5e with SMTP id
 ba11-20020a056870c58b00b0010bd21dad5emr681050oab.287.1665524162610; Tue, 11
 Oct 2022 14:36:02 -0700 (PDT)
MIME-Version: 1.0
References: <20221011032327.2761241-1-zengheng4@huawei.com> <CAKwvOdn=4Vzgt6zo64tTc+d=QHVrWxRe2JzBC8ydyc_wst1EEA@mail.gmail.com>
In-Reply-To: <CAKwvOdn=4Vzgt6zo64tTc+d=QHVrWxRe2JzBC8ydyc_wst1EEA@mail.gmail.com>
From:   Masahiro Yamada <masahiroy@kernel.org>
Date:   Wed, 12 Oct 2022 06:35:26 +0900
X-Gmail-Original-Message-ID: <CAK7LNASyaZsohRvp3UDSOY8tr9XJ1f0eCaRobmnwqd2v4BLgwg@mail.gmail.com>
Message-ID: <CAK7LNASyaZsohRvp3UDSOY8tr9XJ1f0eCaRobmnwqd2v4BLgwg@mail.gmail.com>
Subject: Re: [PATCH -next] Makefile: add implicit enum-conversion check for
 compile build
To:     Nick Desaulniers <ndesaulniers@google.com>
Cc:     Zeng Heng <zengheng4@huawei.com>, michal.lkml@markovi.net,
        nathan@kernel.org, trix@redhat.com, linux-kbuild@vger.kernel.org,
        llvm@lists.linux.dev, liwei391@huawei.com
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
X-Spam-Status: No, score=-1.2 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,RCVD_IN_DNSWL_NONE,SPF_HELO_NONE,SPF_SOFTFAIL autolearn=no
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kbuild.vger.kernel.org>
X-Mailing-List: linux-kbuild@vger.kernel.org

On Wed, Oct 12, 2022 at 6:10 AM Nick Desaulniers
<ndesaulniers@google.com> wrote:
>
> On Mon, Oct 10, 2022 at 8:24 PM Zeng Heng <zengheng4@huawei.com> wrote:
> >
> > Enable implicit enum-conversion warning option in kernel gcc build.
> > When it set enabled, it can detect implicit enum type conversion
> > and locate conversion errors like below (use "allmodconfig"):
> >
> > drivers/gpu/drm/amd/amdgpu/../display/dc/dml/dcn20/display_mode_vba_20.=
c:3904:46:
> > error: implicit conversion from =E2=80=98enum <anonymous>=E2=80=99 to =
=E2=80=98enum odm_combine_mode=E2=80=99
> > [-Werror=3Denum-conversion]
> >  3904 |       locals->ODMCombineEnablePerState[i][k] =3D true;
> >       |                                              ^
> >
> > The '-Wenum-conversion' could be regarded as effective check in
> > compile runtime and call attention on potential mistakes, which is
> > firstly introduced from GNU gcc-10.
> >
> > Although "-Wenum-conversion" could be enabled by "-Wextra"
> > when compiling with 'W=3D[123]' option, there are many warnings
> > generated by '-Wextra' that cause too much noise in the build.
> >
> > Seeing the more details from the following link:
> > https://gcc.gnu.org/onlinedocs/gcc-11.3.0/gcc/Warning-Options.html
> >
> > Therefore, "-Wenum-conversion" warning option needs to be
> > explicitly requested for GCC when compilation process is only
> > companied with '-Wall'.
> >
> > With clang, -Wenum-conversion is just default enabled, not even
> > behind -Wall.
>
> Probably didn't need the examples below since you already provide an
> example above, too, but it doesn't matter.  Thanks for the patch.
>
> Reviewed-by: Nick Desaulniers <ndesaulniers@google.com>
>
> >
> > Provide a couple examples for reference as below:
> >
> > $ cat test.c
> > enum enum1 { A =3D 1 };
> > enum enum2 { B =3D 2 };
> >
> > enum enum1 foo(enum enum2 bar)
> > {
> >     return bar;
> > }
> >
> > $ gcc -Wall -fsyntax-only test.c
> >
> > $ gcc -Wall -Wenum-conversion -fsyntax-only test.c
> > test.c: In function =E2=80=98foo=E2=80=99:
> > test.c:6:9: warning: implicit conversion from =E2=80=98enum enum2=E2=80=
=99 to =E2=80=98enum enum1=E2=80=99 [-Wenum-conversion]
> >     6 |  return bar;
> >       |         ^~~
> >
> > $ gcc -Wextra -fsyntax-only test.c
> > test.c: In function =E2=80=98foo=E2=80=99:
> > test.c:6:9: warning: implicit conversion from =E2=80=98enum enum2=E2=80=
=99 to =E2=80=98enum enum1=E2=80=99 [-Wenum-conversion]
> >     6 |  return bar;
> >       |         ^~~
> >
> > $ clang -fsyntax-only test.c
> > test.c:6:9: warning: implicit conversion from enumeration type 'enum en=
um2' to different enumeration type 'enum enum1' [-Wenum-conversion]
> >         return bar;
> >         ~~~~~~ ^~~
> > 1 warning generated.
> >
> > Signed-off-by: Zeng Heng <zengheng4@huawei.com>
> > Suggested-by: Nick Desaulniers <ndesaulniers@google.com>
> > Suggested-by: Nathan Chancellor <nathan@kernel.org>
> > ---
> >  Makefile | 4 ++++
> >  1 file changed, 4 insertions(+)
> >
> > diff --git a/Makefile b/Makefile
> > index 8f6ed52fa08f..72103d22df23 100644
> > --- a/Makefile
> > +++ b/Makefile
> > @@ -880,6 +880,10 @@ endif
> >  KBUILD_CFLAGS +=3D $(call cc-disable-warning, unused-but-set-variable)
> >  KBUILD_CFLAGS +=3D $(call cc-disable-warning, unused-const-variable)
> >
> > +# implicit enum conversion checking is supported since from gcc-10
> > +# this warning option has to be explicitly requested for GCC
> > +KBUILD_CFLAGS +=3D $(call cc-option, -Wenum-conversion)
> > +
> >  # These result in bogus false positives
> >  KBUILD_CFLAGS +=3D $(call cc-disable-warning, dangling-pointer)
> >
> > --
> > 2.25.1
> >
>
>
> --
> Thanks,
> ~Nick Desaulniers



Applied to linux-kbuild. Thanks.


--=20
Best Regards
Masahiro Yamada
