Return-Path: <linux-kbuild-owner@vger.kernel.org>
X-Original-To: lists+linux-kbuild@lfdr.de
Delivered-To: lists+linux-kbuild@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id E9613517C23
	for <lists+linux-kbuild@lfdr.de>; Tue,  3 May 2022 04:58:21 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230216AbiECDAE (ORCPT <rfc822;lists+linux-kbuild@lfdr.de>);
        Mon, 2 May 2022 23:00:04 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:43820 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S230217AbiECDAC (ORCPT
        <rfc822;linux-kbuild@vger.kernel.org>);
        Mon, 2 May 2022 23:00:02 -0400
Received: from conssluserg-05.nifty.com (conssluserg-05.nifty.com [210.131.2.90])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 6A6F938796;
        Mon,  2 May 2022 19:56:31 -0700 (PDT)
Received: from mail-pl1-f175.google.com (mail-pl1-f175.google.com [209.85.214.175]) (authenticated)
        by conssluserg-05.nifty.com with ESMTP id 2432uH6U011152;
        Tue, 3 May 2022 11:56:18 +0900
DKIM-Filter: OpenDKIM Filter v2.10.3 conssluserg-05.nifty.com 2432uH6U011152
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=nifty.com;
        s=dec2015msa; t=1651546578;
        bh=VwNM2W8hTeAPyUymgN9LUFlugNghegTT9oPZA7kVbPw=;
        h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
        b=b7rcSdV7mz/JZOyvIov8Ywq2FD+dsBcn3UMqYkJIP1gOLdkWdlBYmOdv4TrzG4kbY
         VjYuYP+MtvbDaOyo4z1qm7F/RB0z6RHKHI7Frk/tGi5YYPtGDgFUDb88FXf3NtqCHV
         nazTTdACqhaUC8YsZVDDsPWJ+wxUPck8/rNIwb2GVm6hR9T67Z2aQFnVGGc5sMYJPb
         lA6Nstjq6kSFCxstllx4T8P73vkawuyzDA/Mcx8LCSe3FVJ9c1SZBqSj5yUKet+K0y
         q7si4slZ+OK3Hz6PiZD4w5nU0wrSIajoTdDYkQLLoUSQasl8tlhcqIYDZNp8DYCjqZ
         CzaFgqaf0HjFA==
X-Nifty-SrcIP: [209.85.214.175]
Received: by mail-pl1-f175.google.com with SMTP id d15so13954621plh.2;
        Mon, 02 May 2022 19:56:18 -0700 (PDT)
X-Gm-Message-State: AOAM530xukct0glWTF7DbgChOy4bC6MKR/dMLd2cqmd3SpQ3gHiPFBSV
        oXR/jOxauaAykjnuLDzAPhs1kogaw9Zu+djvUgQ=
X-Google-Smtp-Source: ABdhPJzZYa6S1jTp9537Jw6pSz/ivM6fvC6WKnXzu7KP/iqWkJk5Uae3t1lDZwuLeSS6FtfGZY+1F1fh1HqbefqZiXI=
X-Received: by 2002:a17:90a:e517:b0:1d7:5bbd:f9f0 with SMTP id
 t23-20020a17090ae51700b001d75bbdf9f0mr2411545pjy.77.1651546577266; Mon, 02
 May 2022 19:56:17 -0700 (PDT)
MIME-Version: 1.0
References: <20220501084032.1025918-1-masahiroy@kernel.org> <20220501084032.1025918-20-masahiroy@kernel.org>
In-Reply-To: <20220501084032.1025918-20-masahiroy@kernel.org>
From:   Masahiro Yamada <masahiroy@kernel.org>
Date:   Tue, 3 May 2022 11:55:11 +0900
X-Gmail-Original-Message-ID: <CAK7LNASzBse=oPA2u4dMJoF9VSJ492K+s=d5Yyn4Aw0dJgu03A@mail.gmail.com>
Message-ID: <CAK7LNASzBse=oPA2u4dMJoF9VSJ492K+s=d5Yyn4Aw0dJgu03A@mail.gmail.com>
Subject: Re: [PATCH v2 19/26] kbuild: embed symbol versions at final link of
 vmlinux or modules
To:     Linux Kbuild mailing list <linux-kbuild@vger.kernel.org>
Cc:     Linux Kernel Mailing List <linux-kernel@vger.kernel.org>,
        Michal Marek <michal.lkml@markovi.net>,
        Nick Desaulniers <ndesaulniers@google.com>
Content-Type: text/plain; charset="UTF-8"
X-Spam-Status: No, score=-1.2 required=5.0 tests=BAYES_00,DKIM_SIGNED,
        DKIM_VALID,RCVD_IN_DNSWL_NONE,SPF_HELO_NONE,SPF_SOFTFAIL,
        T_SCC_BODY_TEXT_LINE autolearn=no autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <linux-kbuild.vger.kernel.org>
X-Mailing-List: linux-kbuild@vger.kernel.org

On Sun, May 1, 2022 at 5:42 PM Masahiro Yamada <masahiroy@kernel.org> wrote:
>
> Do not update objects with version CRCs while the directory descending.
>
> Do it at the final link stage.
>
> Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>


As 0-day bot reported, this does not work for CONFIG_MODULE_REL_CRCS.

I will send v3.


> ---
>
> (no changes since v1)
>
>  scripts/Makefile.build    | 22 +++-------------------
>  scripts/Makefile.modfinal |  3 ++-
>  scripts/link-vmlinux.sh   |  4 +++-
>  3 files changed, 8 insertions(+), 21 deletions(-)
>
> diff --git a/scripts/Makefile.build b/scripts/Makefile.build
> index a1023868775f..cec17b28de42 100644
> --- a/scripts/Makefile.build
> +++ b/scripts/Makefile.build
> @@ -162,15 +162,9 @@ ifdef CONFIG_MODVERSIONS
>  # o if <file>.o doesn't contain a __ksymtab version, i.e. does
>  #   not export symbols, it's done.
>  # o otherwise, we calculate symbol versions using the good old
> -#   genksyms on the preprocessed source and postprocess them in a way
> -#   that they are usable as a linker script
> -# o generate .tmp_<file>.o from <file>.o using the linker to
> -#   replace the unresolved symbols __crc_exported_symbol with
> -#   the actual value of the checksum generated by genksyms
> -# o remove .tmp_<file>.o to <file>.o
> -
> -# Generate .o.symversions files for each .o with exported symbols, and link these
> -# to the kernel and/or modules at the end.
> +#   genksyms on the preprocessed source and dump them into the .cmd file.
> +# o modpost will extract versions from the .cmd file and create linker
> +#   scripts used to link the kernel and/or modules.
>
>  genksyms_format_rel_crc := [^_]*__crc_\([^ ]*\) = \.; LONG(\([^)]*\)).*
>  genksyms_format_normal := __crc_\(.*\) = \(.*\);
> @@ -188,12 +182,6 @@ gen_symversions =                                                          \
>
>  cmd_gen_symversions_c =        $(call gen_symversions,c)
>
> -cmd_modversions =                                                              \
> -       if [ -r $@.symversions ]; then                                          \
> -               $(LD) $(KBUILD_LDFLAGS) -r -o $(@D)/.tmp_$(@F) $@               \
> -                       -T $@.symversions;                                      \
> -               mv -f $(@D)/.tmp_$(@F) $@;                                      \
> -       fi
>  endif
>
>  ifdef CONFIG_FTRACE_MCOUNT_USE_RECORDMCOUNT
> @@ -273,7 +261,6 @@ define rule_cc_o_c
>         $(call cmd,checkdoc)
>         $(call cmd,gen_objtooldep)
>         $(call cmd,gen_symversions_c)
> -       $(if $(CONFIG_LTO_CLANG),,$(call cmd,modversions))
>         $(call cmd,record_mcount)
>  endef
>
> @@ -282,7 +269,6 @@ define rule_as_o_S
>         $(call cmd,gen_ksymdeps)
>         $(call cmd,gen_objtooldep)
>         $(call cmd,gen_symversions_S)
> -       $(call cmd,modversions)
>  endef
>
>  # Built-in and composite module parts
> @@ -296,8 +282,6 @@ ifneq ($(CONFIG_LTO_CLANG)$(CONFIG_X86_KERNEL_IBT),)
>  quiet_cmd_cc_prelink_modules = LD [M]  $@
>        cmd_cc_prelink_modules =                                         \
>         $(LD) $(ld_flags) -r -o $@                                      \
> -               $(shell [ -s $(@:.prelink.o=.o.symversions) ] &&                \
> -                       echo -T $(@:.prelink.o=.o.symversions))         \
>                 --whole-archive $(filter-out FORCE,$^)                  \
>                 $(cmd_objtool)
>
> diff --git a/scripts/Makefile.modfinal b/scripts/Makefile.modfinal
> index 7f39599e9fae..d429e3f9ae1d 100644
> --- a/scripts/Makefile.modfinal
> +++ b/scripts/Makefile.modfinal
> @@ -34,6 +34,7 @@ quiet_cmd_ld_ko_o = LD [M]  $@
>        cmd_ld_ko_o +=                                                   \
>         $(LD) -r $(KBUILD_LDFLAGS)                                      \
>                 $(KBUILD_LDFLAGS_MODULE) $(LDFLAGS_MODULE)              \
> +               $(addprefix -T, $(filter %.symver.lds, $(real-prereqs)))\
>                 -T scripts/module.lds -o $@ $(filter %.o, $^);          \
>         $(if $(ARCH_POSTLINK), $(MAKE) -f $(ARCH_POSTLINK) $@, true)
>
> @@ -56,7 +57,7 @@ if_changed_except = $(if $(call newer_prereqs_except,$(2))$(cmd-check),      \
>
>
>  # Re-generate module BTFs if either module's .ko or vmlinux changed
> -$(modules): %.ko: %$(mod-prelink-ext).o %.mod.o scripts/module.lds $(if $(KBUILD_BUILTIN),vmlinux) FORCE
> +$(modules): %.ko: %$(mod-prelink-ext).o %.mod.o $(if $(CONFIG_MODVERSIONS), %.symver.lds) scripts/module.lds $(if $(KBUILD_BUILTIN),vmlinux) FORCE
>         +$(call if_changed_except,ld_ko_o,vmlinux)
>  ifdef CONFIG_DEBUG_INFO_BTF_MODULES
>         +$(if $(newer-prereqs),$(call cmd,btf_ko))
> diff --git a/scripts/link-vmlinux.sh b/scripts/link-vmlinux.sh
> index eceb3ee7ec06..8da5c0182665 100755
> --- a/scripts/link-vmlinux.sh
> +++ b/scripts/link-vmlinux.sh
> @@ -90,7 +90,6 @@ modpost_link()
>
>                 if is_enabled CONFIG_MODVERSIONS; then
>                         gen_symversions
> -                       lds="${lds} -T .tmp_symversions.lds"
>                 fi
>
>                 # This might take a while, so indicate that we're doing
> @@ -196,6 +195,9 @@ vmlinux_link()
>         fi
>
>         ldflags="${ldflags} ${wl}--script=${objtree}/${KBUILD_LDS}"
> +       if is_enabled CONFIG_MODVERSIONS; then
> +               ldflags="${ldflags} ${wl}--script=vmlinux.symver.lds"
> +       fi
>
>         # The kallsyms linking does not need debug symbols included.
>         if [ "$output" != "${output#.tmp_vmlinux.kallsyms}" ] ; then
> --
> 2.32.0
>


-- 
Best Regards
Masahiro Yamada
